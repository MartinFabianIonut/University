     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, printf, scanf
     5                                  import exit msvcrt.dll
     6                                  import printf msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  
     9                                  segment code use32 class=code
    10                                  	start:bits 32
    11                                  
    12                                  global start
    13                                  
    14 00000000 68[57000000]            push dword format_afisare_temp1 
    15 00000005 FF15[00000000]          call [printf] 
    16 0000000B 83C404                  add esp, 4 
    17                                  
    18 0000000E 68[0C000000]            push dword a 
    19 00000013 68[38000000]            push dword format_citire 
    20 00000018 FF15[00000000]          call [scanf] 
    21 0000001E 83C408                  add esp, 8 
    22                                  
    23                                  
    24                                  
    25 00000021 A1[0C000000]            mov eax, [a] 
    26 00000026 6BC003                  imul eax, 3 
    27 00000029 A3[10000000]            mov [temp2], eax 
    28                                  
    29                                  
    30 0000002E A1[10000000]            mov eax, [temp2] 
    31 00000033 83C015                  add eax, 21 
    32 00000036 A3[14000000]            mov [temp3], eax 
    33                                  
    34 0000003B A1[14000000]            mov eax, [temp3]
    35 00000040 A3[08000000]            mov [b],eax
    36 00000045 68[71000000]            push dword format_afisare_temp4 
    37 0000004A FF15[00000000]          call [printf] 
    38 00000050 83C404                  add esp, 4 
    39                                  
    40 00000053 A1[08000000]            mov eax, [b] 
    41 00000058 50                      push dword eax 
    42 00000059 68[3B000000]            push dword format_afisare_b 
    43 0000005E FF15[00000000]          call [printf] 
    44 00000064 83C408                  add esp, 8 
    45                                  
    46 00000067 68[44010000]            push dword format_afisare_endl 
    47 0000006C FF15[00000000]          call [printf] 
    48 00000072 83C404                  add esp, 4 
    49                                  
    50                                  
    51                                  
    52 00000075 A1[08000000]            mov eax, [b] 
    53 0000007A 8B1D[0C000000]          mov ebx, [a] 
    54 00000080 31D2                    xor edx, edx 
    55 00000082 F7F3                    div ebx 
    56 00000084 A3[18000000]            mov [temp5], eax 
    57                                  
    58 00000089 A1[18000000]            mov eax, [temp5]
    59 0000008E A3[04000000]            mov [c],eax
    60 00000093 68[A3000000]            push dword format_afisare_temp6 
    61 00000098 FF15[00000000]          call [printf] 
    62 0000009E 83C404                  add esp, 4 
    63                                  
    64 000000A1 A1[04000000]            mov eax, [c] 
    65 000000A6 50                      push dword eax 
    66 000000A7 68[42000000]            push dword format_afisare_c 
    67 000000AC FF15[00000000]          call [printf] 
    68 000000B2 83C408                  add esp, 8 
    69                                  
    70 000000B5 68[44010000]            push dword format_afisare_endl 
    71 000000BA FF15[00000000]          call [printf] 
    72 000000C0 83C404                  add esp, 4 
    73                                  
    74                                  
    75                                  
    76 000000C3 A1[0C000000]            mov eax, [a] 
    77 000000C8 8B1D[04000000]          mov ebx, [c] 
    78 000000CE 31D2                    xor edx, edx 
    79 000000D0 F7F3                    div ebx 
    80 000000D2 8915[1C000000]          mov [temp7], edx 
    81                                  
    82                                  
    83                                  
    84 000000D8 A1[08000000]            mov eax, [b] 
    85 000000DD BB02000000              mov ebx, 2 
    86 000000E2 31D2                    xor edx, edx 
    87 000000E4 F7F3                    div ebx 
    88 000000E6 A3[20000000]            mov [temp8], eax 
    89                                  
    90                                  
    91 000000EB A1[20000000]            mov eax, [temp8] 
    92 000000F0 6BC003                  imul eax, 3 
    93 000000F3 A3[24000000]            mov [temp9], eax 
    94                                  
    95 000000F8 A1[1C000000]            mov eax, [temp7] 
    96 000000FD 0305[24000000]          add eax, [temp9] 
    97 00000103 A3[28000000]            mov [temp10], eax 
    98                                  
    99                                  
   100 00000108 A1[28000000]            mov eax, [temp10] 
   101 0000010D 83C002                  add eax, 2 
   102 00000110 A3[2C000000]            mov [temp11], eax 
   103                                  
   104 00000115 A1[2C000000]            mov eax, [temp11]
   105 0000011A A3[00000000]            mov [d],eax
   106 0000011F 68[D0000000]            push dword format_afisare_temp12 
   107 00000124 FF15[00000000]          call [printf] 
   108 0000012A 83C404                  add esp, 4 
   109                                  
   110 0000012D A1[00000000]            mov eax, [d] 
   111 00000132 50                      push dword eax 
   112 00000133 68[49000000]            push dword format_afisare_d 
   113 00000138 FF15[00000000]          call [printf] 
   114 0000013E 83C408                  add esp, 8 
   115                                  
   116 00000141 68[44010000]            push dword format_afisare_endl 
   117 00000146 FF15[00000000]          call [printf] 
   118 0000014C 83C404                  add esp, 4 
   119                                  
   120                                  
   121                                  
   122 0000014F A1[00000000]            mov eax, [d] 
   123 00000154 0305[08000000]          add eax, [b] 
   124 0000015A A3[30000000]            mov [temp13], eax 
   125                                  
   126                                  
   127 0000015F A1[30000000]            mov eax, [temp13] 
   128 00000164 0FAF05[04000000]        imul eax, [c] 
   129 0000016B A3[34000000]            mov [temp14], eax 
   130                                  
   131 00000170 A1[34000000]            mov eax, [temp14]
   132 00000175 A3[0C000000]            mov [a],eax
   133 0000017A 68[11010000]            push dword format_afisare_temp15 
   134 0000017F FF15[00000000]          call [printf] 
   135 00000185 83C404                  add esp, 4 
   136                                  
   137 00000188 A1[0C000000]            mov eax, [a] 
   138 0000018D 50                      push dword eax 
   139 0000018E 68[50000000]            push dword format_afisare_a 
   140 00000193 FF15[00000000]          call [printf] 
   141 00000199 83C408                  add esp, 8 
   142                                  
   143 0000019C 68[44010000]            push dword format_afisare_endl 
   144 000001A1 FF15[00000000]          call [printf] 
   145 000001A7 83C404                  add esp, 4 
   146                                  
   147 000001AA 6A00                    push dword 0
   148 000001AC FF15[00000000]          call [exit]
   149                                  
   150                                  segment data use32 class=data
   151 00000000 00000000                	d dd 0
   152 00000004 00000000                	c dd 0
   153 00000008 00000000                	b dd 0
   154 0000000C 00000000                	a dd 0
   155 00000010 00000000                	temp2 dd 0
   156 00000014 00000000                	temp3 dd 0
   157 00000018 00000000                	temp5 dd 0
   158 0000001C 00000000                	temp7 dd 0
   159 00000020 00000000                	temp8 dd 0
   160 00000024 00000000                	temp9 dd 0
   161 00000028 00000000                	temp10 dd 0
   162 0000002C 00000000                	temp11 dd 0
   163 00000030 00000000                	temp13 dd 0
   164 00000034 00000000                	temp14 dd 0
   165 00000038 256400                  	format_citire db "%d", 0
   166 0000003B 62203D20256400          	format_afisare_b db "b = %d", 0
   167 00000042 63203D20256400          	format_afisare_c db "c = %d", 0
   168 00000049 64203D20256400          	format_afisare_d db "d = %d", 0
   169 00000050 61203D20256400          	format_afisare_a db "a = %d", 0
   170 00000057 496E74726F64756365-     	format_afisare_temp1 db "Introduceti un numar a = ", 0
   170 00000060 746920756E206E756D-
   170 00000069 61722061203D2000   
   171 00000071 416D2063616C63756C-     	format_afisare_temp4 db "Am calculat b = a * 3 + 21, iar rezultatul este: ", 0
   171 0000007A 61742062203D206120-
   171 00000083 2A2033202B2032312C-
   171 0000008C 206961722072657A75-
   171 00000095 6C746174756C206573-
   171 0000009E 74653A2000         
   172 000000A3 416D2063616C63756C-     	format_afisare_temp6 db "Am calculat c = b / a, iar rezultatul este: ", 0
   172 000000AC 61742063203D206220-
   172 000000B5 2F20612C2069617220-
   172 000000BE 72657A756C74617475-
   172 000000C7 6C20657374653A2000 
   173 000000D0 416D2063616C63756C-     	format_afisare_temp12 db "Am calculat d = a [mod] c + b / 2 * 3 + 2, iar rezultatul este: ", 0
   173 000000D9 61742064203D206120-
   173 000000E2 5B6D6F645D2063202B-
   173 000000EB 2062202F2032202A20-
   173 000000F4 33202B20322C206961-
   173 000000FD 722072657A756C7461-
   173 00000106 74756C20657374653A-
   173 0000010F 2000               
   174 00000111 416D2063616C63756C-     	format_afisare_temp15 db "Am calculat a = (d + b) * c, iar rezultatul este: ", 0
   174 0000011A 61742061203D202864-
   174 00000123 202B206229202A2063-
   174 0000012C 2C206961722072657A-
   174 00000135 756C746174756C2065-
   174 0000013E 7374653A2000       
   175 00000144 0D0A00                  	format_afisare_endl db "", 0Dh, 0Ah, 0
